name = "Approach"
tools_version = "5.7.1"
default_localization = "en"

# Platforms

[platforms.iOS]
supported = [ "\"16.4\"" ]

# Features

[features.AccessoriesOverview]
features = [ "AlleysList", "GearList" ]
dependencies = [ "Algorithms" ]

[features.AddressLookup]
repositories = [ "Locations" ]
services = [ "AddressLookup" ]
libraries = [ "SwiftUIExtensions", "Views" ]

[features.AlleyEditor]
features = [ "AddressLookup", "Form", "LaneEditor" ]
repositories = [ "Alleys" ]
services = [ "Analytics", "FeatureFlags" ]
libraries = [ "ModelsViews" ]

[features.AlleysList]
features = [ "AlleyEditor" ]
libraries = [ "ResourceList" ]

[features.App]
features = [ "AccessoriesOverview", "BowlersList", "Onboarding", "Settings", "StatisticsOverview" ]

[features.ArchiveList]
features = [ "Errors" ]
repositories = [ "Bowlers", "Games", "Leagues", "Series" ]
libraries = [ "DateTime", "ModelsViews" ]

[features.AvatarEditor]
services = [ "Avatar" ]
libraries = [ "Extensions", "Views" ]

[features.BowlerEditor]
features = [ "Form" ]
repositories = [ "Bowlers" ]
services = [ "Analytics" ]

[features.BowlersList]
features = [ "BowlerEditor", "LeaguesList" ]

[features.Errors]
services = [ "Email", "FileManager", "Logging", "Pasteboard" ]
libraries = [ "Constants", "Equatable", "Toast" ]

[features.FeatureFlagsList]
services = [ "FeatureFlags" ]
libraries = [ "Strings" ]

[features.Form]
features = [ "Errors" ]

[features.GamesEditor]
features = [ "Sharing", "StatisticsDetails" ]
repositories = [ "Frames", "Gear", "Lanes" ]
services = [ "Avatar", "RecentlyUsed" ]

[features.GamesList]
features = [ "GamesEditor", "SeriesEditor" ]
libraries = [ "ResourceList" ]

[features.GearEditor]
features = [ "AvatarEditor", "Form" ]
repositories = [ "Bowlers", "Gear" ]
services = [ "Analytics", "FeatureFlags" ]
libraries = [ "PickableModels" ]

[features.GearList]
features = [ "GearEditor" ]
services = [ "RecentlyUsed" ]
libraries = [ "ResourceList", "SortOrder" ]

[features.ImportExport]
services = [ "ImportExport", "Preference" ]
libraries = [ "DateTime", "SwiftUIExtensions", "Views" ]

[features.LaneEditor]
libraries = [ "Models", "SwiftUIExtensions", "Views" ]

[features.LeagueEditor]
features = [ "Form" ]
repositories = [ "Alleys", "Leagues" ]
services = [ "Analytics", "FeatureFlags" ]
libraries = [ "ModelsViews", "PickableModels" ]

[features.LeaguesList]
features = [ "SeriesList", "StatisticsWidgetsLayout" ]

[features.OpponentDetails]
features = [ "BowlerEditor" ]
repositories = [ "Games" ]
libraries = [ "ResourceList" ]

[features.OpponentsList]
features = [ "OpponentDetails" ]
services = [ "FeatureFlags", "RecentlyUsed" ]
libraries = [ "ModelsViews", "SortOrder" ]

[features.Onboarding]
repositories = [ "Bowlers" ]
libraries = [ "Extensions", "SwiftUIExtensions", "Views" ]

[features.Paywall]
features = [ "Errors" ]
services = [ "Products" ]

[features.SeriesEditor]
features = [ "Form" ]
repositories = [ "Alleys", "Series" ]
services = [ "Analytics", "FeatureFlags" ]
libraries = [ "DateTime", "ModelsViews", "PickableModels" ]

[features.SeriesList]
features = [ "GamesList", "LeagueEditor" ]
libraries = [ "SortOrder" ]

[features.Settings]
features = [ "ArchiveList", "FeatureFlagsList", "ImportExport", "OpponentsList" ]
services = [ "AppIcon", "DatabaseMocking", "Products" ]

[features.Sharing]
features = [ "Errors" ]
repositories = [ "Games", "Scores" ]
libraries = [ "ScoreSheet" ]
dependencies = [ "Algorithms" ]

[features.StatisticsOverview]
features = [ "StatisticsDetails" ]

[features.StatisticsDetails]
features = [ "Errors" ]
repositories = [ "Bowlers", "Leagues", "Games", "Series", "Statistics" ]
services = [ "Analytics", "FeatureFlags", "Notifications", "Preference", "Tips" ]
libraries = [ "ModelsViews", "PickableModels" ]

[features.StatisticsWidgetsLayout]
features = [ "StatisticsDetails" ]
repositories = [ "StatisticsWidgets" ]
libraries = [ "Reordering" ]

# Repositories

[repositories.Alleys]
services = [ "RecentlyUsed" ]
libraries = [ "StatisticsModels" ]
[repositories.Alleys.interface]
repositories = [ "Lanes", "Locations" ]

[repositories.Bowlers]
services = [ "RecentlyUsed" ]
libraries = [ "StatisticsModels" ]

[repositories.Frames]
[repositories.Frames.interface]
libraries = [ "Extensions", "ScoreKeeper" ]

[repositories.Games]
libraries = [ "Extensions" ]
[repositories.Games.interface]
repositories = [ "MatchPlays" ]

[repositories.Gear]
services = [ "RecentlyUsed" ]

[repositories.Lanes]

[repositories.Leagues]
services = [ "RecentlyUsed" ]
libraries = [ "StatisticsModels" ]

[repositories.Locations]

[repositories.MatchPlays]

[repositories.Scores]
repositories = [ "Frames", "Games" ]
[repositories.Scores.tests]
repositories = [ "Frames", "Games" ]

[repositories.Series]
[repositories.Series.interface]

[repositories.Statistics]
services = [ "Preference", "FeatureFlags" ]
libraries = [ "StatisticsModels" ]
[repositories.Statistics.interface]
libraries = [ "StatisticsWidgets" ]

[repositories.StatisticsWidgets]
[repositories.StatisticsWidgets.interface]
repositories = [ "Statistics" ]
[repositories.StatisticsWidgets.tests]
repositories = [ "Statistics" ]

# Services

[services.AddressLookup]
[services.AddressLookup.interface]
libraries = [ "Equatable", "Models" ]
dependencies = [ "XCTestDynamicOverlay" ]

[services.Analytics]
services = [ "Preference" ]
libraries = [ "Constants" ]
dependencies = [ "Sentry", "TelemetryClient" ]
[services.Analytics.interface]
dependencies = [ "ComposableArchitecture" ]

[services.AppIcon]
skip_tests = true
[services.AppIcon.interface]
libraries = [ "Assets" ]

[services.Avatar]
libraries = [ "Extensions" ]
[services.Avatar.interface]
libraries = [ "ModelsViews" ]

[services.Database]
libraries = [ "Database" ]
services = [ "FileManager" ]
[services.Database.interface]
suitable_for_dependents_matching = "\\w+Repository$"
dependencies = [ "GRDB" ]

[services.DatabaseMocking]
skip_tests = true

[services.Email]

[services.FeatureFlags]
services = [ "Preference" ]
[services.FeatureFlags.interface]
libraries = [ "FeatureFlags" ]

[services.FileManager]
dependencies = [ "ZIPFoundation" ]

[services.ImportExport]
services = [ "Database", "FileManager" ]
libraries = [ "DateTime" ]

[services.Logging]
services = [ "FileManager" ]
dependencies = [ "CocoaLumberjack", "CocoaLumberjackSwift" ]

[services.Notifications]

[services.Pasteboard]

[services.Preference]

[services.Products]
libraries = [ "Constants" ]
dependencies = [ "RevenueCat" ]
[services.Products.interface]
libraries = [ "Products" ]

[services.RecentlyUsed]
services = [ "Preference" ]

[services.Tips]
services = [ "Preference" ]
[services.Tips.interface]
libraries = [ "Tips" ]

# Libraries

[libraries.Assets]
skip_tests = true
dependencies = [ "SFSafeSymbols" ]
[libraries.Assets.resources]
processed = [ "Resources" ]

[libraries.Constants]
skip_tests = true
libraries = [ "Strings" ]
[libraries.Constants.resources]
processed = [ "Resources" ]

[libraries.Database]
libraries = [ "ScoreKeeper" ]
dependencies = [ "GRDB" ]

[libraries.DatabaseModels]
skip_tests = true
libraries = [ "Models" ]
dependencies = [ "Dependencies", "GRDB" ]

[libraries.DateTime]

[libraries.Equatable]

[libraries.Extensions]

[libraries.FeatureAction]
skip_tests = true
dependencies = [ "ComposableArchitecture" ]

[libraries.FeatureFlags]

[libraries.ListContent]
libraries = [ "Views" ]
dependencies = [ "ComposableArchitecture" ]

[libraries.Models]
libraries = [ "ScoreKeeperModels" ]
dependencies = [ "IdentifiedCollections" ]
[libraries.Models.tests]
dependencies = [ "Dependencies" ]

[libraries.ModelsViews]
libraries = [ "Assets", "Models", "Strings" ]

[libraries.PickableModels]
libraries = [ "Models", "ResourcePicker" ]

[libraries.Products]
skip_tests = true

[libraries.Reordering]
libraries = [ "FeatureAction" ]
dependencies = [ "IdentifiedCollections" ]

[libraries.Repository]
libraries = [ "Sorting" ]
dependencies = [ "AsyncAlgorithms" ]

[libraries.ResourceList]
libraries = [ "Equatable", "FeatureAction", "ListContent" ]

[libraries.ResourcePicker]
libraries = [ "FeatureAction", "ListContent" ]

[libraries.ScoreKeeper]
libraries = [ "ScoreKeeperModels" ]

[libraries.ScoreKeeperModels]

[libraries.ScoreSheet]
libraries = [ "DateTime", "Models", "SwiftUIExtensions", "Views" ]

[libraries.Sorting]

[libraries.SortOrder]
libraries = [ "FeatureAction", "SwiftUIExtensions", "Views" ]

[libraries.Statistics]
libraries = [ "Models", "Strings" ]
[libraries.Statistics.tests]
dependencies = [ "Dependencies" ]

[libraries.StatisticsCharts]
libraries = [ "DateTime", "Statistics", "SwiftUIExtensions" ]

[libraries.StatisticsChartsMocks]
skip_tests = true
libraries = [ "StatisticsCharts" ]
dependencies = [ "Dependencies" ]

[libraries.StatisticsModels]
libraries = [ "DatabaseModels", "Statistics" ]
[libraries.StatisticsModels.tests]
services = [ "Database" ]
libraries = [ "TestDatabaseUtilities" ]

[libraries.StatisticsWidgets]
libraries = [ "StatisticsChartsMocks" ]

[libraries.Strings]

[libraries.SwiftUIExtensions]
libraries = [ "Assets" ]

[libraries.TestDatabaseUtilities]
suitable_for_dependents_matching = "\\w+Tests$"
skip_tests = true
libraries = [ "Database", "DatabaseModels" ]

[libraries.TestUtilities]
suitable_for_dependents_matching = "\\w+Tests$"
skip_tests = true

[libraries.Tips]
libraries = [ "Views" ]

[libraries.Toast]
libraries = [ "SwiftUIExtensions", "Views" ]
dependencies = [ "ComposableArchitecture", "PopupView" ]

[libraries.Views]
libraries = [ "Assets", "Strings" ]

# External Dependencies

[dependencies.Algorithms]
url = "https://github.com/apple/swift-algorithms.git"
from = "1.1.0"

[dependencies.AsyncAlgorithms]
url = "https://github.com/apple/swift-async-algorithms.git"
from = "0.1.0"

[dependencies.CocoaLumberjack]
url = "https://github.com/CocoaLumberjack/CocoaLumberjack.git"
from = "3.8.2"

[dependencies.CocoaLumberjackSwift]
url = "https://github.com/CocoaLumberjack/CocoaLumberjack.git"
from = "3.8.2"

[dependencies.GRDB]
url = "https://github.com/groue/GRDB.swift.git"
from = "6.21.0"

[dependencies.ComposableArchitecture]
url = "https://github.com/pointfreeco/swift-composable-architecture.git"
from = "1.3.0"

[dependencies.Dependencies]
url = "https://github.com/pointfreeco/swift-dependencies.git"
from = "1.0.0"

[dependencies.IdentifiedCollections]
url = "https://github.com/pointfreeco/swift-identified-collections.git"
from = "1.0.0"

[dependencies.PopupView]
url = "https://github.com/exyte/PopupView.git"
from = "2.8.2"

[dependencies.RevenueCat]
url = "https://github.com/RevenueCat/purchases-ios.git"
from = "4.25.9"

[dependencies.SFSafeSymbols]
url = "https://github.com/SFSafeSymbols/SFSafeSymbols.git"
from = "4.1.1"

[dependencies.Sentry]
url = "https://github.com/getsentry/sentry-cocoa.git"
from = "8.15.2"

[dependencies.Shimmer]
url = "https://github.com/markiv/SwiftUI-Shimmer.git"
from = "1.4.0"

[dependencies.SnapshotTesting]
suitable_for_dependents_matching = "\\w+Tests$"
url = "https://github.com/pointfreeco/swift-snapshot-testing.git"
from = "1.14.2"

[dependencies.TelemetryClient]
url = "https://github.com/TelemetryDeck/SwiftClient.git"
from = "1.4.4"

[dependencies.XCTestDynamicOverlay]
url = "https://github.com/pointfreeco/xctest-dynamic-overlay.git"
from = "1.0.2"

[dependencies.ZIPFoundation]
url = "https://github.com/weichsel/ZIPFoundation.git"
from = "0.9.16"

# Default Imports

[defaults.features]
services = [ "Logging" ]
libraries = [ "FeatureAction" ]
dependencies = [ "ComposableArchitecture" ]

[defaults.features.tests]
dependencies = [ "SnapshotTesting" ]

[defaults.repositories]
services = [ "Database" ]
libraries = [ "DatabaseModels", "Repository" ]

[defaults.repositories.interface]
libraries = [ "Models" ]
dependencies = [ "Dependencies" ]

[defaults.repositories.tests]
services = [ "Database" ]
libraries = [ "TestUtilities", "TestDatabaseUtilities" ]
dependencies = [ "SnapshotTesting" ]

[defaults.services.interface]
dependencies = [ "Dependencies" ]

[defaults.services.tests]
dependencies = [ "SnapshotTesting" ]

[defaults.libraries.tests]
dependencies = [ "SnapshotTesting" ]
